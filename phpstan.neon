includes:
    - 'vendor/symplify/phpstan-extensions/config/config.neon'

parameters:
    autoload_files:
        - %currentWorkingDirectory%/tests/bootstrap.php

    excludes_analyse:
        - packages/*/var/*
        - packages/*/vendor/*
        - packages/EasyCore/src/Bridge/Symfony/ApiPlatform/Filter/VirtualSearchFilter.php
        - packages/EasyStandard/src/Sniffs/Commenting/FunctionCommentSniff.php
        - packages/EasyCore/src/Bridge/Symfony/Resources/skeleton/*

    ignoreErrors:
        - '#Call to an undefined method Prophecy\\Prophecy\\ObjectProphecy::[\w\\]+\(\).#'
        - '#Call to an undefined method Mockery\\ExpectationInterface|Mockery\\HigherOrderMessage::once\(\).#'
        - '#Parameter \#1 \$app of class [A-Z][\w\\]+ constructor expects Illuminate\\(Contracts\\)?Foundation\\Application, Laravel\\Lumen\\Application given.#'
        - '#Method "\S+\(\)" returns bool type, so the name should start with is/has/was#'

        # ---- EasyApiToken ----
        - message: '#Parameter \#[0-9] \$(.*?) of method EonX\\EasyApiToken\\Tests\\Encoders\\FirebaseJwtTokenEncoderTest::createJwtTokenDecoder\(\) expects resource\|string\|null, resource\|string\|false given.#'
          path: packages/EasyApiToken/tests

        - message: '#Parameter \#[0-9] \$(.*?) of method EonX\\EasyApiToken\\Tests\\AbstractFirebaseJwtTokenTestCase::createFirebaseJwtDriver\(\) expects resource\|string\|null, resource\|string\|false given#'
          path: packages/EasyApiToken/tests

        # ---- EasyAsync ----
        - message: '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition::children\(\).#'
          path: packages/EasyAsync/src/Bridge/Symfony/DependencyInjection

        - message: '#Method EonX\\EasyAsync\\Generators\\DateTimeGenerator::fromString\(\) should return DateTime but returns DateTime\|false.#'
          path: packages/EasyAsync/src/Generators

        - message: '#Method EonX\\EasyAsync\\Tests\\AbstractTestCase::mock\(\) should return Mockery\\MockInterface but returns Mockery\\LegacyMockInterface.#'
          path: packages/EasyAsync/tests

        - message: '#Unable to resolve the template type ExpectedType in call to method static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\)#'
          path: packages/EasyAsync/tests

        - message: '#Parameter \#1 \$expected of static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\) expects class-string<object>, string given.#'
          path: packages/EasyAsync/tests/Persisters

        - message: '#Cannot call method format\(\) on DateTime\|null#'
          path: packages/EasyAsync/src/Data/AbstractEasyAsyncData.php

        - message: '#Parameter \#1 \$(finished|started)At of method EonX\\EasyAsync\\Interfaces\\EasyAsyncDataInterface\:\:set(Finished|Started)At\(\) expects DateTime, DateTime\|null given#'
          path: packages/EasyAsync/src/Implementations/Doctrine/DBAL/JobLogPersister.php

        - message: '#Method EonX\\EasyAsync\\Bridge\\Symfony\\Events\\EventDispatcher\:\:dispatch\(\) should return EonX\\EasyAsync\\Interfaces\\EasyAsyncEventInterface but returns object#'
          path: packages/EasyAsync/src/Bridge/Symfony/Events/EventDispatcher.php

        # ---- EasyCfhighlander ----
        # ---- EasyCore ----
        - message: '#Access to an undefined property object::\$[\w]+.#'
          path: packages/EasyCore/tests/Http/Middleware

        - message: '#Access to an undefined property object::\$[\w]+.#'
          path: packages/EasyCore/tests/Bridge/Laravel/Middleware/SetContentLengthTest.php

        - message: '#Access to an undefined property EonX\\EasyCore\\Bridge\\Laravel\\Providers\\CachedConfigServiceProvider::\$loadedConfigurations.#'
          path: packages/EasyCore/src/Bridge/Laravel/Providers

        - message: '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition\:\:children\(\)#'
          path: packages/EasyCore/src/Bridge/Symfony/DependencyInjection/Configuration.php

        - message: '#Parameter \#1 \$connOrDsn of class Symfony\\Component\\Lock\\Store\\PdoStore constructor expects Doctrine\\DBAL\\Connection\|PDO\|string, object given#'
          path: packages/EasyCore/src/Lock/LockService.php

        - message: '#Method EonX\\EasyCore\\Tests\\AbstractTestCase\:\:mock\(\) should return Mockery\\MockInterface but returns Mockery\\LegacyMockInterface#'
          path: packages/EasyCore/tests/AbstractTestCase.php

        - message: '#Cannot call method newInstanceWithoutConstructor\(\) on ReflectionClass\|null#'
          path: packages/EasyCore/src/Bridge/Symfony/DependencyInjection/Compiler/AutoConfigureEventListenersPass.php

        - message: '#PHPDoc tag @var for variable \$dataPersister has invalid type EonX\\EasyCore\\Bridge\\Symfony\\ApiPlatform\\Traits\\RequestAttributesAwareTrait#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/Listeners/ResolveRequestAttributesListener.php

        - message: '#Call to method setRequestAttributes\(\) on an unknown class EonX\\EasyCore\\Bridge\\Symfony\\ApiPlatform\\Traits\\RequestAttributesAwareTrait#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/Listeners/ResolveRequestAttributesListener.php

        - message: '#Call to an undefined method ApiPlatform\\Core\\DataPersister\\DataPersisterInterface\:\:getPersistersResponse\(\)#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/DataCollector/RequestDataCollector.php

        - message: '#Method EonX\\EasyCore\\Bridge\\Symfony\\ApiPlatform\\DataPersister\\ChainSimpleDataPersister\:\:getSimpleDataPersister\(\) should return ApiPlatform\\Core\\DataPersister\\ContextAwareDataPersisterInterface\|null but returns object\|null#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/DataPersister/ChainSimpleDataPersister.php

        - message: '#Call to an undefined method ApiPlatform\\Core\\DataPersister\\ContextAwareDataPersisterInterface\:\:(getSimpleDataPersisters|getDataPersisters)\(\)#'
          path: packages/EasyCore/src/Bridge/Symfony/ApiPlatform/DataPersister/TraceableChainSimpleDataPersister.php

        # ---- EasyDecision ----
        - message: '#Strict comparison using === between true and false will always evaluate to false.#'
          path: packages/EasyDecision/src/Decisions

        - message: '#Parameter \#3 \$ruleProviders of class EonX\\EasyDecision\\Decisions\\DecisionConfig constructor expects array<EonX\\EasyDecision\\Interfaces\\RuleProviderInterface>, array<int, stdClass> given.#'
          path: packages/EasyDecision/tests/Decisions

        - message: "#Offset 'fn' does not exist on array\\(string\\).#"
          path: packages/EasyDecision/src/Helpers

        - message: '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition\:\:children\(\)#'
          path: packages/EasyDecision/src/Bridge/Symfony/DependencyInjection/Configuration.php

        - message: '#Cannot call method getFunctions\(\) on EonX\\EasyDecision\\Expressions\\Interfaces\\ExpressionLanguageInterface\|null#'
          path: packages/EasyDecision/tests/Bridge/Symfony/EasyDecisionBundleTest.php

        - message: '#Cannot call method addFunction\(\) on EonX\\EasyDecision\\Expressions\\Interfaces\\ExpressionLanguageInterface\|null#'
          path: packages/EasyDecision/tests/Bridge/Symfony/Stubs/Configurators/NameRestrictedExpressionFunctionConfigurator.php

        - message: '#Cannot call method addFunction\(\) on EonX\\EasyDecision\\Expressions\\Interfaces\\ExpressionLanguageInterface\|null#'
          path: packages/EasyDecision/tests/Bridge/Symfony/Stubs/Configurators/TypeRestrictedExpressionFunctionConfigurator.php

        # ---- EasyDocker ----
        # ---- EasyEntityChange ----
        # ---- EasyIdentity ----
        - message: '#Access to an undefined property Mockery\\LegacyMockInterface::\$users.#'
          path: packages/EasyIdentity/tests/Implementations/Auth0

        # ---- EasyLogging ----
        - message: '#Class App\\Exceptions\\EntityValidationFailedException not found.#'
          path: packages/EasyLogging/src/ContextModifiers

        - message: '#Call to method getErrors\(\) on an unknown class App\\Exceptions\\EntityValidationFailedException.#'
          path: packages/EasyLogging/src/ContextModifiers

        # ---- EasyPagination ----
        - message: '#Call to an undefined method Illuminate\\Support\\ServiceProvider::boot\(\).#'
          path: packages/EasyPagination/tests/Bridge/Laravel

        - message: '#Parameter \#1 \$expected of static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\) expects class-string<object>, string given.#'
          path: packages/EasyPagination/tests

        - message: '#Unable to resolve the template type ExpectedType in call to method static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\)#'
          path: packages/EasyPagination/tests

        - message: '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition\:\:children\(\)#'
          path: packages/EasyPagination/src/Bridge/Symfony/DependencyInjection/Configuration.php

        - message: '#Parameter \#1 \$request of method EonX\\EasyPsr7Factory\\Interfaces\\EasyPsr7FactoryInterface\:\:createRequest\(\) expects Symfony\\Component\\HttpFoundation\\Request, Symfony\\Component\\HttpFoundation\\Request\|null given#'
          path: packages/EasyPagination/src/Bridge/Symfony/Factories/ServerRequestFactory.php

        - message: '#Method EonX\\EasyPagination\\Tests\\AbstractTestCase\:\:mock\(\) should return Mockery\\MockInterface but returns Mockery\\LegacyMockInterface#'
          path: packages/EasyPagination/tests/AbstractTestCase.php

        - '#Parameter \#1 \$queryBuilder of method EonX\\EasyPagination\\Paginators\\Doctrine(Dbal|Orm)LengthAwarePaginator::doGet(TotalItems|Result)\(\) expects Doctrine\\(ORM|DBAL\\Query)\\QueryBuilder, Doctrine\\DBAL\\Query\\QueryBuilder\|Doctrine\\ORM\\QueryBuilder given.#'
        - '#Method EonX\\EasyPagination\\Paginators\\Doctrine(Dbal|Orm)LengthAwarePaginator::createQueryBuilder\(\) never returns Doctrine\\(ORM|DBAL\\Query)\\QueryBuilder so it can be removed from the return typehint.#'
        - '#Parameter \#2 \$alias of method Doctrine\\ORM\\QueryBuilder\:\:from\(\) expects string, string\|null given#'

        # ---- EasyPipeline ----
        - message: '#Parameter \#2 \$pipelines of class EonX\\EasyPipeline\\Implementations\\Illuminate\\IlluminatePipelineFactory constructor expects array<string>, array<int, int\|string> given.#'
          path: packages/EasyPipeline/src/Bridge/Laravel

        - message: '#Parameter \#1 $argument of class ReflectionClass constructor expects class-string<T of object>|T of object, string given.#'
          path: packages/EasyPipeline/tests

        # ---- EasyPsr7Factory ----
        # ---- EasyRepository ----
        - message: '#Call to an undefined method Illuminate\\Database\\Eloquent\\Model::find\(\).#'
          path: packages/EasyRepository/src/Implementations/Illuminate

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractDoctrineOrmRepository::\$repository \(Doctrine\\ORM\\EntityRepository\) does not accept Doctrine\\Persistence\\ObjectRepository.#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM

        - message: '#Property EonX\\EasyRepository\\Implementations\\Doctrine\\ORM\\AbstractDoctrineOrmRepository::\$manager \(Doctrine\\ORM\\EntityManagerInterface\) does not accept Doctrine\\Persistence\\ObjectManager\|null.#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM

        - message: '#Method EonX\\EasyRepository\\Tests\\Implementation\\Illuminate\\EloquentRepositoryStub::getModel\(\) should return Illuminate\\Database\\Eloquent\\Model but returns Mockery\\LegacyMockInterface.#'
          path: packages/EasyRepository/tests/Implementation/Illuminate

        - message: '#Parameter \#1 \$expected of static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\) expects class-string<object>, string given.#'
          path: packages/EasyRepository/tests

        - message: '#Unable to resolve the template type ExpectedType in call to method static method PHPUnit\\Framework\\Assert::assertInstanceOf\(\)#'
          path: packages/EasyRepository/tests

        - message: '#Parameter \#1 $argument of class ReflectionClass constructor expects class-string<T of object>|T of object, string given.#'
          path: packages/EasyRepository/tests

        - message: '#Cannot call method getRepository\(\) on Doctrine\\Persistence\\ObjectManager\|null#'
          path: packages/EasyRepository/src/Implementations/Doctrine/ORM/AbstractDoctrineOrmRepository.php

        # ---- EasySchedule ----
        - message: '#Parameter \#1 \$var of function count expects array\|Countable, EonX\\EasySchedule\\Interfaces\\EventInterface given#'
          path: packages/EasySchedule/src/Bridge/Symfony/DataCollector/ScheduleDataCollector.php

        - message: '#Parameter \#1 \$app of method EonX\\EasySchedule\\Interfaces\\ScheduleInterface\:\:setApplication\(\) expects Symfony\\Component\\Console\\Application, Symfony\\Component\\Console\\Application\|null given#'
          path: packages/EasySchedule/src/Command/ScheduleRunCommand.php

        - message: '#Cannot cast Symfony\\Component\\Console\\Input\\InputInterface to string#'
          path: packages/EasySchedule/src/Event.php

        - message: '#Array \(array<EonX\\EasySchedule\\Interfaces\\EventInterface\>\) does not accept array#'
          path: packages/EasySchedule/src/Bridge/Symfony/TraceableSchedule.php

        - message: '#Cannot access an offset on array\|EonX\\EasySchedule\\Interfaces\\EventInterface#'
          path: packages/EasySchedule/src/Bridge/Symfony/TraceableSchedule.php

        # ---- EasySecurity ----
        - message: '#Method EonX\\EasySecurity\\Bridge\\Symfony\\Helpers\\DeferredContextResolver\:\:resolve\(\) should return EonX\\EasySecurity\\Interfaces\\ContextInterface but returns object\|null#'
          path: packages/EasySecurity/src/Bridge/Symfony/Helpers/DeferredContextResolver.php

        - message: '#Call to an undefined method Symfony\\Component\\Config\\Definition\\Builder\\NodeDefinition::children\(\).#'
          path: packages/EasySecurity/src/Bridge/Symfony/DependencyInjection

        - message: '#Parameter \#2 \$permissions of class EonX\\EasySecurity\\Role constructor expects array<EonX\\EasySecurity\\Interfaces\\PermissionInterface\|string>, array<int, EonX\\EasySecurity\\Permission\|stdClass\|string> given.#'
          path: packages/EasySecurity/tests

        - message: '#Parameter \#1 \$roles of method EonX\\EasySecurity\\Interfaces\\ContextInterface\:\:setRoles\(\) expects array<EonX\\EasySecurity\\Interfaces\\RoleInterface\|string\>\|EonX\\EasySecurity\\Interfaces\\RoleInterface\|string, \(array<EonX\\EasySecurity\\Interfaces\\RoleInterface\>\)\|null given#'
          path: packages/EasySecurity/src/Modifiers/RolesFromJwtModifier.php

        # ---- EasySsm ----
        - message: '#Parameter \#1 \$stream of class Symfony\\Component\\Console\\Output\\StreamOutput constructor expects resource, resource\|false given#'
          path: packages/EasySsm/tests/Services/Dotenv/Loaders/ConsoleOutputLoaderTest.php

        - message: '#Return type \(array\) of method EonX\\EasySsm\\Tests\\Stubs\\BaseSsmClientStub\:\:getPaginator\(\) should be compatible with return type \(Aws\\ResultPaginator\) of method Aws\\Aws(Client|ClientInterface)\:\:getPaginator\(\)#'
          path: packages/EasySsm/tests/Stubs/BaseSsmClientStub.php

        - message: '#Return type \(void\) of method EonX\\EasySsm\\Tests\\Stubs\\BaseSsmClientStub\:\:(delete|put)Parameter\(\) should be compatible with return type \(Aws\\Result\) of method Aws\\Ssm\\SsmClient\:\:(delete|put)Parameter\(\)#'
          path: packages/EasySsm/tests/Stubs/BaseSsmClientStub.php

        - message: '#Cannot cast array<string\>\|bool\|string\|null to string#'
          path: packages/EasySsm/src/Console/Commands/ExportEnvsCommand.php

        # ---- EasyTest ----
        - message: '#Cannot cast array<string>\|bool\|string\|null to float.#'
          path: packages/EasyTest/src/Console/Commands

        - message: '#Cannot cast array<string>\|string\|null to string.#'
          path: packages/EasyTest/src/Console/Commands
