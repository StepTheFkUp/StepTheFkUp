name: PHP-CI
on: [push]
jobs:
    composer:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php: [ '7.3' ]
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v1
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   uses: eonx-com/actions-cache@v1
                id: composer-cache
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}

            -   if: steps.composer-cache.outputs.cache-hit == false
                run: |
                    composer global require hirak/prestissimo; \
                    composer install --prefer-dist --no-progress; \
                    mkdir cache; \
                    cp ./composer.lock ./cache/composer.lock;

            -   if: steps.composer-cache.outputs.cache-hit == false
                uses: eonx-com/actions-cache@v1
                with:
                    path: cache
                    key: ${{ matrix.php }}-composer-lock-${{ hashFiles('**/composer.json') }}

    ecs:
        runs-on: ubuntu-latest
        needs: composer
        strategy:
            matrix:
                php: [ '7.3' ]
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v1
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ matrix.php }}-composer-

            -   name: '[CI] Check ECS [CI]'
                run: composer check-ecs

    phpstan:
        runs-on: ubuntu-latest
        needs: composer
        strategy:
            matrix:
                php: [ '7.3' ]
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v1
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ matrix.php }}-composer-

            -   name: '[CI] Check PHPStan [CI]'
                run: composer check-phpstan

    security:
        runs-on: ubuntu-latest
        needs: composer
        strategy:
            matrix:
                php: [ '7.3' ]
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v1
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   uses: eonx-com/actions-cache@v1
                with:
                    path: cache
                    key: ${{ matrix.php }}-composer-lock-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ matrix.php }}-composer-lock-

            -   run: |
                    cp ./cache/composer.lock ./composer.lock; \
                    rm -rf cache;

            -   uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ matrix.php }}-composer-

            -   name: '[CI] Check Security [CI]'
                run: composer check-security

    tests:
        runs-on: ubuntu-latest
        needs: composer
        strategy:
            matrix:
                php: [ '7.3' ]
        steps:
            -   uses: eonx-com/actions-checkout@v2

            -   uses: eonx-com/actions-setup-php@v1
                with:
                    php-version: ${{ matrix.php }}
                    coverage: none

            -   uses: eonx-com/actions-cache@v1
                with:
                    path: vendor
                    key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ matrix.php }}-composer-

            -   name: '[CI] Check Tests [CI]'
                run: composer check-tests
